# technicolor_modem_signal.yaml
# HomeAssistant scraper script for Technicolor TC4400 cable modem
#
# Based on the Arris and Netgear scraper scripts by mmiller7:
# * https://github.com/mmiller7/Arris_modem_scrape
# * https://github.com/mmiller7/Netgear_modem_scrape
#
# The YAML file exposes the scraper shell command to HomeAssistant.
# You can do further things here - e.g. define automations, or add
# additional sensors beyond the autoconfigured ones - but this is 
# optional.
# 
# Copyright (c) 2023 "Philipp Reichmuth" <philipp.reichmuth@gmail.com>
#
# License: CC-BY-SA-NC 4.0
# https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode 
# The original scripts by mmiller7 were published without a license.

# Call script which publishes readings to MQTT
shell_command:
  technicolor_modem_signal_run_scrape: '/config/technicolor_modem_signal_scraper/technicolor_signal_dump.sh'

# Everything from here is optional and can be commented out.

## Set up automations (alternatively set them up through the interface or in automations.yaml)
# automation:
#   # Run the test on startup, and hourly
#   - alias: 'Technicolor Cable Modem Signals'
#     trigger:
#       - platform: homeassistant
#         event: start
#       - platform: time_pattern
#         minutes: '/10'
# ## Optional if you have a sensor to make sure the modem is actually up before running
# #    condition:
# #      - condition: state
# #        entity_id: binary_sensor.http_cable_modem
# #        state: 'on'
# #        for: '00:00:10'
#     action:
#       service: shell_command.technicolor_modem_signal_run_scrape

# Extra sensor definitions
# Most of the sensors are identified through MQTT autodiscovery
# Here you can set up a few extra ones:
mqtt:
  sensor:
    # Login Status
    - name: "Cable Modem Web-UI Login Status"
      force_update: true
      expire_after: 200
      unique_id: "modemsignals_webui_login_status"
      state_topic: "homeassistant/sensor/technicolor_scraper/login"
      value_template: "{{ value_json.login }}"
